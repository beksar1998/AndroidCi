plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

ext.versionMajor = 0

ext.gitVersioner = [
        defaultBranch           : "master",  // default "master"
        stableBranches          : ["master", "someOtherBranch"], // default [], the feature branch postfix (-dm4(6)) will not be appended on stable branches, all commits are included into the version number calculation
        yearFactor              : 1200,      // default "1000", increasing every 8.57h
        snapshotEnabled         : false,      // default false, the "-SNAPSHOT" postfix
        localChangesCountEnabled: true,       // default false, the (<commitCount>) before -SNAPSHOT
        shortName               : { gitVersion ->            // optional closure to build a short name
            // allows you to add your own short name logic
            // All properties from gitVersion are available
            // can be used for CI `System.getenv("BUILD_NUMBER")`

            // i.e. use short sha1
            return gitVersion.commit.subSequence(0, 7)
        }
]

apply from: 'https://raw.githubusercontent.com/passsy/gradle-GitVersioner/master/git-versioner.gradle'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.beksar.androidci"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode gitVersion.version
        versionName "${versionMajor}.${gitVersion.version}.${gitVersion.localChanges}"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        release {
//            def keystoreProperties = new Properties()
//            def keystorePropsFile = file("keystore/keystore_config")
//
//            if (keystorePropsFile.exists()) {
//                file("keystore/keystore_config").withInputStream { keystoreProperties.load(it) }
//                storeFile file("$keystoreProperties.storeFile")
//                storePassword "$keystoreProperties.storePassword"
//                keyAlias "$keystoreProperties.keyAlias"
//                keyPassword "$keystoreProperties.keyPassword"
//            }
            print(gitVersion.version)
            if (file('keystore/androidci').exists()) {
                storeFile file('keystore/androidci')
                storePassword System.getenv('KEYSTORE_PASSWORD')
                keyAlias System.getenv('RELEASE_SIGN_KEY_ALIAS')
                keyPassword System.getenv('RELEASE_SIGN_KEY_PASSWORD')
            }
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}